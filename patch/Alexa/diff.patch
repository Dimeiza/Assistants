diff --git a/SampleApp/include/SampleApp/SampleApplication.h b/SampleApp/include/SampleApp/SampleApplication.h
index 14579416a..86117762c 100644
--- a/SampleApp/include/SampleApp/SampleApplication.h
+++ b/SampleApp/include/SampleApp/SampleApplication.h
@@ -31,6 +31,8 @@
 #include "SampleApplicationReturnCodes.h"
 #include "UserInputManager.h"
 
+#include "PosixQueueManager.h"
+
 #ifdef KWD
 #include <KWD/AbstractKeywordDetector.h>
 #endif
@@ -233,6 +235,8 @@ private:
     /// The singleton map from @c playerId to @c ExternalMediaAdapter creation functions.
     static capabilityAgents::externalMediaPlayer::ExternalMediaPlayer::AdapterCreationMap m_adapterToCreateFuncMap;
 
+    std::shared_ptr<PosixQueueManager> m_posixQueueManager;
+    
 #ifdef KWD
     /// The Wakeword Detector which can wake up the client using audio input.
     std::unique_ptr<kwd::AbstractKeywordDetector> m_keywordDetector;
diff --git a/SampleApp/src/CMakeLists.txt b/SampleApp/src/CMakeLists.txt
index b3ec46e57..c87dc6dac 100644
--- a/SampleApp/src/CMakeLists.txt
+++ b/SampleApp/src/CMakeLists.txt
@@ -12,7 +12,9 @@ list(APPEND LibSampleApp_SOURCES
     UserInputManager.cpp
     SampleApplication.cpp
     SampleEqualizerModeController.cpp
-    main.cpp)
+    main.cpp
+    PosixQueueManager.cpp
+    HTMLRenderer.cpp)
 
 if (DIAGNOSTICS)
     list(APPEND LibSampleApp_SOURCES SDKDiagnostics.cpp)
diff --git a/SampleApp/src/GuiRenderer.cpp b/SampleApp/src/GuiRenderer.cpp
index 0e6b0361e..307cbeb19 100644
--- a/SampleApp/src/GuiRenderer.cpp
+++ b/SampleApp/src/GuiRenderer.cpp
@@ -19,6 +19,7 @@
 #include <AVSCommon/Utils/JSON/JSONUtils.h>
 #include "SampleApp/ConsolePrinter.h"
 #include "SampleApp/GuiRenderer.h"
+#include "SampleApp/HTMLRenderer.h"
 
 namespace alexaClientSDK {
 namespace sampleApp {
@@ -153,8 +154,10 @@ void GuiRenderer::renderTemplateCard(const std::string& jsonPayload, avsCommon::
     buffer += RENDER_FOOTER;
 
 #endif
-
     ConsolePrinter::simplePrint(buffer);
+
+    // std::cout << jsonPayload << std::endl;
+    HTMLRenderer::outputHTMLToFile(templateType,payload);
 }
 
 void GuiRenderer::clearTemplateCard() {
diff --git a/SampleApp/src/SampleApplication.cpp b/SampleApp/src/SampleApplication.cpp
index d7681a42d..742dce936 100644
--- a/SampleApp/src/SampleApplication.cpp
+++ b/SampleApp/src/SampleApplication.cpp
@@ -329,6 +329,10 @@ SampleApplication::MediaPlayerRegistration::MediaPlayerRegistration(
 }
 
 SampleAppReturnCode SampleApplication::run() {
+
+    avsCommon::utils::threading::Executor executor;
+    executor.submit([this]() { m_posixQueueManager->run(); });
+
     return m_userInputManager->run();
 }
 
@@ -738,6 +742,8 @@ bool SampleApplication::initialize(
         return false;
     }
 
+ 
+        
     authDelegate->addAuthObserver(userInterfaceManager);
     m_capabilitiesDelegate->addCapabilitiesObserver(userInterfaceManager);
 
@@ -1348,7 +1354,10 @@ bool SampleApplication::initialize(
         ACSDK_CRITICAL(LX("Failed to create UserInputManager!"));
         return false;
     }
-
+    m_posixQueueManager = alexaClientSDK::sampleApp::PosixQueueManager::create(m_interactionManager);
+    client->addAlexaDialogStateObserver(m_posixQueueManager);
+ 
+        
     authDelegate->addAuthObserver(m_userInputManager);
     client->getRegistrationManager()->addObserver(m_userInputManager);
     m_capabilitiesDelegate->addCapabilitiesObserver(m_userInputManager);
diff --git a/SampleApp/src/UserInputManager.cpp b/SampleApp/src/UserInputManager.cpp
index 92255756c..ff811251f 100644
--- a/SampleApp/src/UserInputManager.cpp
+++ b/SampleApp/src/UserInputManager.cpp
@@ -21,7 +21,7 @@
 #include <AVSCommon/Utils/String/StringUtils.h>
 #include "SampleApp/UserInputManager.h"
 #include "SampleApp/ConsolePrinter.h"
-
+#include <unistd.h>
 #ifdef RANGE_CONTROLLER
 #include "SampleApp/ModeControllerHandler.h"
 #endif
@@ -379,7 +379,8 @@ SampleAppReturnCode UserInputManager::run() {
             diagnosticsMenu();
 #endif
         } else {
-            m_interactionManager->errorValue();
+           //  m_interactionManager->errorValue();
+            usleep(500 * 1000);
         }
     }
     if (!userTriggeredLogout && m_restart) {
